version: '3.8'
services:

  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`ops.localhost`) && PathPrefix(`/dashboard`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=ops-auth"
      - "traefik.http.middlewares.ops-auth.basicauth.users=admin:$2y$05$Vl.s2.qL.JZuReS1FpLv6O.nrZbcUOJfQJiOUWBTxCrmQwwr60xDu"

  api:
    build: ./api
    container_name: api
    depends_on:
      - neo4j
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=neo4jpassword
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.middlewares=strip-api,api-ratelimit"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
      # middlewares aplicados (stripPrefix y rateLimit)
      - "traefik.http.middlewares.strip-api.stripPrefix.prefixes=/v1,/api"
      - "traefik.http.middlewares.api-ratelimit.ratelimit.average=5"
      - "traefik.http.middlewares.api-ratelimit.ratelimit.burst=10"

  neo4j:
    image: neo4j:4.4
    container_name: neo4j
    environment:
      - NEO4J_AUTH=neo4j/neo4jpassword
    volumes:
      - neo4j_data:/data
    networks:
      - web
    # Nota: NO exponemos puertos hacia el host

networks:
  web:
    driver: bridge

volumes:
  neo4j_data:
